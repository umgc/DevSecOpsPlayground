@inject FaqManagerService FaqManager

<div>
    <EditForm Model="@this.SelectedFaq" OnValidSubmit="@CancelModify">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="p-5">
            <h2>@this.Title</h2>
            <table class="table w-50 p-5">
                <tr class="row w-25">
                    <td class="d-xl-table-cell">
                        <label>
                            Topic:
                            <InputText id="topic" @bind-Value="this.SelectedFaq.Topic" />
                        </label>
                    </td>
                </tr>
                <tr class="row w-25">
                    <td class="d-xl-table-cell">
                        <label>
                            Question:
                            <InputText id="question" @bind-Value="this.SelectedFaq.Question" />
                        </label>
                    </td>
                </tr>
                <tr class="row w-25">
                    <td class="d-xl-table-cell">
                        <label>
                            Reply:
                            <InputText id="reply" @bind-Value="this.SelectedFaq.Reply" />
                        </label>
                    </td>
                </tr>
            </table>
            <button @onclick="e => this.CancelModify()">
                Cancel
            </button>
            <button @onclick="e => this.DeleteRecord()">
                Delete
            </button>
            <button @onclick="e => this.UpdateRecord()">
                Update
            </button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter] public EventCallback<FaqInformation> SelectedFaqChanged { get; set; }
    [Parameter] public FaqInformation SelectedFaq { get; set; } = null;
    [Parameter] public string Title { get; set; } = null;

    private void CancelModify()
    {
        this.SelectedFaq = null;
        SelectedFaqChanged.InvokeAsync(SelectedFaq);
    }
    private void DeleteRecord()
    {
        if (this.SelectedFaq == null)
        {
            Console.Error.WriteLine("Couldn't Delete Faq");
            return;
        }
        FaqManager.Remove(SelectedFaq);
        SelectedFaq = null;
        SelectedFaqChanged.InvokeAsync(SelectedFaq);
    }
    private void UpdateRecord()
    {
        if (this.SelectedFaq == null)
        {
            return;
        }
        FaqManager.Update(this.SelectedFaq);
        this.SelectedFaq = null;
        SelectedFaqChanged.InvokeAsync(SelectedFaq);
    }
}