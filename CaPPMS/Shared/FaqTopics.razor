@using CaPPMS.Model
@namespace CaPPMS.Shared

<div>
    @foreach (string topic in this.faqTopicCollapeMap.Keys)
    {
        <div class="row">
            <div>
                <button @onclick="e => this.faqTopicCollapeMap[topic].isCollapsed = !this.faqTopicCollapeMap[topic].isCollapsed">
                    @(this.faqTopicCollapeMap[topic].isCollapsed ? "+" : "-")
                </button>
            </div>
            <div class="font-weight-bold" style="text-align:left">&nbsp;@topic</div>
        </div>
        foreach (FaqInformation faqInfo in this.faqTopicCollapeMap[topic].faqsWithTopic)
        {
            <FaqQuestion 
                CollapseQuestion="@(this.faqTopicCollapeMap[topic].isCollapsed ? "collapse" : "")"
                FaqInformation="@faqInfo">
            </FaqQuestion>
        }

    }
</div>

@code{

    public class FaqTopicCollaper
    {
        public string Topic { get; set; } = string.Empty;
        public List<FaqInformation> faqsWithTopic = new List<FaqInformation>();
        public bool isCollapsed = true;
    }

    private Dictionary<string, FaqTopicCollaper> faqTopicCollapeMap = new Dictionary<string, FaqTopicCollaper>();

    [Parameter]
    public IEnumerable<FaqInformation> FaqKeys
    {
        set
        {
            if (value is IEnumerable<FaqInformation>)
            {
                this.faqTopicCollapeMap.Clear();
                foreach (FaqInformation faqInfo in value)
                {
                    if (!this.faqTopicCollapeMap.ContainsKey(faqInfo.Topic))
                    {
                        this.faqTopicCollapeMap.Add(faqInfo.Topic, new FaqTopicCollaper());
                    }
                    this.faqTopicCollapeMap[faqInfo.Topic].faqsWithTopic.Add(faqInfo);
                }
            }
        }
    }
}